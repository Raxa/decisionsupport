<?xml version="1.0"?>
<!-- ********************************************************* -->
<!-- ** Dss Module                                 ** -->
<!-- **                                                     ** -->
<!-- ** @author Vibha Anand                                 ** -->
<!-- ** @version 1.0                                        ** -->
<!-- ********************************************************* -->
<project basedir="." name="Dss" default="package-module">
                
        <!-- *********************************************************** -->
        <!-- **                     TARGETS                           ** -->
        <!-- *********************************************************** -->
        <target name="init" description="initialization">
                <xmlcatalog id="common-dtds">
                                <dtd 
                                    publicId="-//OpenMRS//DTD OpenMRS Config 1.0//EN"
                                    location="lib-common/config-1.0.dtd"/>
                            </xmlcatalog>
                                
                                <xmlproperty file="metadata/config.xml" >
                                        <xmlcatalog refid="common-dtds"/>
                                </xmlproperty>
 
                <filterset id="variables.to.replace">
                        <filter token="MODULE_ID" value="${module.id}" />
                        <filter token="MODULE_NAME" value="${module.name}" />
                        <filter token="MODULE_VERSION" value="${module.version}" />
                        <filter token="MODULE_PACKAGE" value="${module.package}" />
                </filterset>
                
                <path id="classpath">
                        <fileset dir="lib">
                                <include name="**/*.jar"/>
                        </fileset>
                        <fileset dir="lib-common">
                                <include name="**/*.jar"/>
                        </fileset>
                        <pathelement location="build" />
                </path>
 
        </target>
 
        <target name="clean" description="Delete build and dist directories">
                <delete dir="dist" />
                <delete dir="build" />
        </target>
 
        <target name="compile-module" depends="init" description="Compiles the module">
                <mkdir dir="build" />
                
                <!-- Copy other source data to the build folder -->
                <copy todir="build">
                        <fileset dir="src/" excludes="**/*.java" />
                </copy>
                
                <!--  Compile module java files -->
                <javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
                        <src path="src/" />
                        <include name="**/*.java" />
                </javac>
                
                <!--  Compile module test java files -->
                                <javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
                                        <src path="test/" />
                                        <include name="**/*.java" />
                                </javac>
                
                <!--  Compile module web java files -->
                <javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
                        <compilerarg line="-g" />
                        <src path="web/src/" />
                        <include name="**/*.java" />
                </javac>
                
        </target>
        
        <target name="package-module" depends="compile-module,bind" description="Packages module into jar file">
                <mkdir dir="dist" />
                
                <!-- Copy module metadata -->
                <copy todir="build/">
                        <fileset dir="metadata/" includes="**/*" />
                        <filterset refid="variables.to.replace" />
                </copy>
                
                <!-- Copy module web data -->
                <copy todir="build/web/module/">
                        <fileset dir="web/module/" includes="**/*" />
                        <filterset refid="variables.to.replace" />
                </copy>
                
                <!-- Copy lib folder -->
                <!-- (lib should only contain this module's required -->
                <!-- libraries that OpenMRS doesn't contain already) -->
                <copy todir="build/lib" failonerror="false">
                        <fileset dir="lib" includes="**/*" />
                </copy>
                
            <!-- Copy log4j properties -->
             <copy todir="build/">
                <fileset dir="" includes="log4j.xml" />
             </copy>
                
                <!-- Copy test files -->
                             <copy todir="build/">
                                <fileset dir="test" includes="*.xml" />
                             </copy>
                
                <!-- Create distributable jar file -->
                <jar destfile="dist/${module.id}-${module.version}.omod">
                        <fileset dir="build" includes="**/*" />
                </jar>
        </target>
        
        <target name="deploy-web" depends="package-module">
                <property environment="env"/>
                <copy todir="${env.CATALINA_HOME}/webapps/openmrs/WEB-INF/view/module/${module.id}">
                        <fileset dir="web/module" includes="**/*" />
                </copy>
        </target>
        
        <target name="package-jar" depends="package-module" description="Packages class files into jar file to be included in other projects">
                <!-- Create distributable jar file -->
                <jar destfile="dist/${module.id}-${module.version}.jar">
                        <fileset dir="build" >
                                <exclude name="test/**/*" />
                        </fileset>
                </jar>
        </target>
        
        <target name="bind">
      <taskdef name="bind" classname="org.jibx.binding.ant.CompileTask">
         <classpath refid="classpath" />
      </taskdef>
      <bind binding="${basedir}/binding.xml">
         <classpath refid="classpath" />
      </bind>
        </target>
        
        <target name="codegen">
       <java classname="org.jibx.schema.codegen.CodeGen"
            classpathref="classpath">
         <arg value="-t"/>
         <arg value="src/org/openmrs/module/dss/xmlBeans"/>
         <arg value="src/org/openmrs/module/dss/xmlBeans/*.xsd"/>
       </java>
        </target>
        
</project>
 